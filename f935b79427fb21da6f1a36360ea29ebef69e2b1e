{
  "comments": [
    {
      "key": {
        "uuid": "16f8fdcf_653dce50",
        "filename": "fs_mgr/fs_mgr_remount.cpp",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-01-25T17:42:42Z",
      "side": 1,
      "message": "nit: missing )",
      "range": {
        "startLine": 85,
        "startChar": 65,
        "endLine": 85,
        "endChar": 68
      },
      "revId": "f935b79427fb21da6f1a36360ea29ebef69e2b1e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2367ff3_0d952de2",
        "filename": "fs_mgr/fs_mgr_remount.cpp",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-01-25T17:53:10Z",
      "side": 1,
      "message": "Need to add property checking too.\n\nEither this (to make sure happenstance compilation on \"user\" build results in a tiny executable) or ro.debuggable !\u003d \"1\" if a userdebug compiled binary is somehow landed on a \"user\" build.\n\nIf this check is removed, then the executable tries, and fails (except for rooted non-DAP devices, or devices with a remountable filesystem for system partitions) in ugly ways with tons on unrelated and indecipherable errors. We want the error message to be clear and understandable.",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 86,
        "endChar": 37
      },
      "revId": "f935b79427fb21da6f1a36360ea29ebef69e2b1e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25e2e893_0b398f62",
        "filename": "fs_mgr/fs_mgr_remount.cpp",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-01-25T18:14:26Z",
      "side": 1,
      "message": "char(opt)",
      "range": {
        "startLine": 110,
        "startChar": 50,
        "endLine": 110,
        "endChar": 53
      },
      "revId": "f935b79427fb21da6f1a36360ea29ebef69e2b1e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f4d1077_c4c412c5",
        "filename": "fs_mgr/fs_mgr_remount.cpp",
        "patchSetId": 2
      },
      "lineNbr": 250,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-01-25T17:42:42Z",
      "side": 1,
      "message": "NB:\n\nif errno \u003d EROFS at this point, we are dealing with ext4 dedupe (or other r/o filesystem types). We will consider a device that is in this state and does not have CONFIG_OVERLAY_FS configured in the kernel as a misconfigured and take no action. ext4 dedupe _can_ be worked around by performing a reboot into recovery and fsck\u0027ing, _this_ remount command should _not_ result in a reboot as it stands today.\n\nIn the future, if this is a problem, a -R flag could be added for argument parsing to give it permission to do so ... and through implication also implement verity disable operation and reboot. We may require this functionality in order for adb remount to call this executable, but I have considered that too risky for current release so am also punting the addition of the -R flag.",
      "range": {
        "startLine": 250,
        "startChar": 12,
        "endLine": 250,
        "endChar": 13
      },
      "revId": "f935b79427fb21da6f1a36360ea29ebef69e2b1e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}