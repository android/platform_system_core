{
  "comments": [
    {
      "key": {
        "uuid": "21c882e5_f7025370",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-07-18T00:42:48Z",
      "side": 1,
      "message": "iirc, the thinking was \"what does \u0027properly\u0027 mean?\" --- there\u0027s legit code with int fds that does !fd to check for stdin. (in toybox, say.)\n\n!fd on unique_fd is ambiguous, so it seemed safer to disallow it.\n\nadding a valid() might be a better choice if you want a shorthand?",
      "revId": "9d6ad0898a56d791b2fa836d9296318ee79c24ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f9e49d8_7de44f43",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1135107
      },
      "writtenOn": "2019-07-18T00:52:58Z",
      "side": 1,
      "message": "Wow, !fd is totally obscure for stdin check, but I get the point. It doesn\u0027t apply for unique_fd for current code that\u0027s using it, as that operator was disabled anyway, right?\n\nI do like !fd much better than .valid(), but if you insist, I can implement this in a form of a method (I\u0027d prefer ok() though).\n\nStill, !fd is my first choice.",
      "parentUuid": "21c882e5_f7025370",
      "revId": "9d6ad0898a56d791b2fa836d9296318ee79c24ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e2cb66f_8b502f23",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-07-18T00:56:30Z",
      "side": 1,
      "message": "the problem (and careful not to get jmgao started...) is that we have operator int(). so you can convert int fd code over trivially. (but [even more] dangerously if we include operator!().)\n\n[annoyingly in terms of clear precedent] the STL already uses a mix of ok() and valid(), so either/both seem fine to me.",
      "parentUuid": "6f9e49d8_7de44f43",
      "revId": "9d6ad0898a56d791b2fa836d9296318ee79c24ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2518557_ee9202ab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1135107
      },
      "writtenOn": "2019-07-18T01:03:19Z",
      "side": 1,
      "message": "Yeah, I must admit I felt uncomfortable having both operator! and operator int(). One more try: what about having operator! defined only in ANDROID_BASE_UNIQUE_FD_DISABLE_IMPLICIT_CONVERSION case?",
      "parentUuid": "4e2cb66f_8b502f23",
      "revId": "9d6ad0898a56d791b2fa836d9296318ee79c24ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "407a9f10_3c7b4cd7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-07-18T01:13:49Z",
      "side": 1,
      "message": "+tomcherry so between them, jmgao+tomcherry can outvote me if they agree with you, but i still think operator! is ambiguous. valid() and/or ok() make more sense to me.",
      "parentUuid": "f2518557_ee9202ab",
      "revId": "9d6ad0898a56d791b2fa836d9296318ee79c24ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adb7398f_c7e3cb30",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2019-07-18T10:09:36Z",
      "side": 1,
      "message": "Yeah, I\u0027m not a fan of this. It makes sense for unique_ptr to have an operator bool, because it behaves as a pointer: !foo has the same meaning whether it\u0027s a foo* or a unique_ptr\u003cfoo\u003e. That\u0027s not the case for unique_fd, which is a bad idea IMO.\n\n(Also, sidenote: if we actually wanted to implement this, operator! is probably not the way to go: `if (!foo)` being valid but not `if (foo)` is extremely weird. `explicit operator bool` would probably be the right answer here)",
      "parentUuid": "407a9f10_3c7b4cd7",
      "revId": "9d6ad0898a56d791b2fa836d9296318ee79c24ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d5f6e19_3932eb7d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1135107
      },
      "writtenOn": "2019-07-18T15:40:39Z",
      "side": 1,
      "message": "Right, operator bool is preferable. PTAL now. If you still feel like it\u0027s not a good idea, I\u0027ll go forward with implementing ok().",
      "parentUuid": "adb7398f_c7e3cb30",
      "revId": "9d6ad0898a56d791b2fa836d9296318ee79c24ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}