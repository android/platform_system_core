{
  "comments": [
    {
      "key": {
        "uuid": "070c63b4_d91b89db",
        "filename": "libutils/CallStack_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "why always prefixed with \u0027a\u0027?",
      "range": {
        "startLine": 30,
        "startChar": 38,
        "endLine": 30,
        "endChar": 39
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "399cf71e_a17ff1d1",
        "filename": "libutils/CallStack_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "should we also call these from stacks of various depths?",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 45,
        "endChar": 95
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d75db4b1_9678b68f",
        "filename": "libutils/Looper_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "we could move it into its own file or a header.",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 41
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ffc4f6b_4d3253e6",
        "filename": "libutils/LruCache_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "style is pointer for modifiable argument",
      "range": {
        "startLine": 37,
        "startChar": 65,
        "endLine": 37,
        "endChar": 75
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a41004bb_9824415d",
        "filename": "libutils/LruCache_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "curious why not do this based on remaining bytes as well? We could end up processing a lot of zeros here OR ignoring the end of the data",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 73,
        "endChar": 5
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13535fdf_f3269bf9",
        "filename": "libutils/Printer_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "we need to add an attribute here to make this a compiler error, but since it\u0027s varargs, this is bad usage",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 58
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb3dc0d6_db1b0206",
        "filename": "libutils/Printer_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-07T01:41:16Z",
      "side": 1,
      "message": "wait, i guess it also has __attribute__((format (printf, 2, 3)));\n\nSo, maybe since these aren\u0027t static strings, it assumes it\u0027s valid? Anyway, I would expect this to fail for sure.\n\nYou might try:\n\nprinter.printFormatLine(\"%s\", line.c_str());\n\nsince this delegates to a bionic function.",
      "parentUuid": "13535fdf_f3269bf9",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 58
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "140e210b_25b999c0",
        "filename": "libutils/Printer_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "same, might not consume all of the data here either",
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4e731d6_4a7a7fdc",
        "filename": "libutils/ProcessCallStack_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "nullptr",
      "range": {
        "startLine": 46,
        "startChar": 34,
        "endLine": 46,
        "endChar": 35
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "884cb38a_24176bac",
        "filename": "libutils/ProcessCallStack_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 60,
        "startChar": 13,
        "endLine": 60,
        "endChar": 28
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84fb0a9c_3128ccae",
        "filename": "libutils/RWLock_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "if the lock succeeds, then this should also need unlocked like in L29? Or otherwise, why is the unlock needed in L29? Won\u0027t this deadlock?",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 36,
        "endChar": 67
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26470eb3_a3cb1c81",
        "filename": "libutils/RWLock_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "nit: unnecessary variable",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 39
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf15cbb5_00515f6e",
        "filename": "libutils/RWLock_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 48,
        "startChar": 9,
        "endLine": 48,
        "endChar": 14
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d202983f_cf7e3463",
        "filename": "libutils/RWLock_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "seems strange to re-use operations since it gives the fuzzer less of an ability to control what is going on, and it could always double the input anyway",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 52,
        "endChar": 36
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c959dd1b_3799a486",
        "filename": "libutils/RefBase_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "I don\u0027t think we should copy/paste this, since they are at least a little complicated. I wonder what hboehm thinks of exposing them. Hans?",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 42,
        "endChar": 1
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76a2eff9_931f1c39",
        "filename": "libutils/RefBase_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "this can be nullptr btw",
      "range": {
        "startLine": 66,
        "startChar": 58,
        "endLine": 66,
        "endChar": 70
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f3e0179_ea621db9",
        "filename": "libutils/RefBase_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "const\u0026",
      "range": {
        "startLine": 85,
        "startChar": 36,
        "endLine": 85,
        "endChar": 39
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0417de1d_f314cba1",
        "filename": "libutils/RefBase_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "should just be auto/uint8_t. Reference would be extra cost if not optimized away",
      "range": {
        "startLine": 86,
        "startChar": 9,
        "endLine": 86,
        "endChar": 14
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0159fb61_15e286a6",
        "filename": "libutils/RefBase_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "Seems this is only ever set",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 92,
        "endChar": 21
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e31dcc48_3385c4f8",
        "filename": "libutils/RefBase_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "If any of these are deleted, then val will be set?",
      "range": {
        "startLine": 100,
        "startChar": 57,
        "endLine": 100,
        "endChar": 61
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffd875d2_858c7863",
        "filename": "libutils/RefBase_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 103,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "delete",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 103,
        "endChar": 9
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed305463_bc3ebc9c",
        "filename": "libutils/RefBase_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "If this isn\u0027t true, it means we didn\u0027t start the thread, so there should be some other problem, right?",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 109,
        "endChar": 28
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ce9b0f7_977fab60",
        "filename": "libutils/StopWatch_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 33,
        "endChar": 39
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e113b9f_0d8899f2",
        "filename": "libutils/StopWatch_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 38,
        "startChar": 9,
        "endLine": 38,
        "endChar": 14
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f30af72_bb13e4fa",
        "filename": "libutils/StopWatch_fuzz.cpp",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-07-06T20:46:56Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 42,
        "endChar": 36
      },
      "revId": "cd3e5d58e47306804669c1182f28e124631528da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}