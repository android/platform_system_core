{
  "comments": [
    {
      "key": {
        "uuid": "3e2be675_4e175a36",
        "filename": "base/file.cpp",
        "patchSetId": 2
      },
      "lineNbr": 323,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2018-12-17T19:07:32Z",
      "side": 1,
      "message": "nit: this should be count_written",
      "range": {
        "startLine": 323,
        "startChar": 8,
        "endLine": 323,
        "endChar": 20
      },
      "revId": "3a1c2a078c4ff07f47fd8b61d5620876785b5b6d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6143dd5_de2fdeb0",
        "filename": "base/file.cpp",
        "patchSetId": 2
      },
      "lineNbr": 323,
      "author": {
        "id": 1103743
      },
      "writtenOn": "2018-12-17T21:16:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e2be675_4e175a36",
      "range": {
        "startLine": 323,
        "startChar": 8,
        "endLine": 323,
        "endChar": 20
      },
      "revId": "3a1c2a078c4ff07f47fd8b61d5620876785b5b6d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4018f7bf_ec5b36e6",
        "filename": "base/file.cpp",
        "patchSetId": 2
      },
      "lineNbr": 327,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-12-17T18:58:53Z",
      "side": 1,
      "message": "(i\u0027ll leave it to the folks who actually know something about Windows to say whether this is appropriate behavior...)",
      "range": {
        "startLine": 325,
        "startChar": 0,
        "endLine": 327,
        "endChar": 0
      },
      "revId": "3a1c2a078c4ff07f47fd8b61d5620876785b5b6d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0038afc_d184c681",
        "filename": "base/file.cpp",
        "patchSetId": 2
      },
      "lineNbr": 327,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2018-12-17T19:07:32Z",
      "side": 1,
      "message": "Doesn\u0027t seem like it?\n\nNote  The GetLastError code ERROR_IO_PENDING is not a failure; it designates the write operation is pending completion asynchronously. For more information, see Remarks.",
      "parentUuid": "4018f7bf_ec5b36e6",
      "range": {
        "startLine": 325,
        "startChar": 0,
        "endLine": 327,
        "endChar": 0
      },
      "revId": "3a1c2a078c4ff07f47fd8b61d5620876785b5b6d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4b05152_7f153a5e",
        "filename": "base/file.cpp",
        "patchSetId": 2
      },
      "lineNbr": 327,
      "author": {
        "id": 1103743
      },
      "writtenOn": "2018-12-17T21:16:55Z",
      "side": 1,
      "message": "I\u0027ve added code to block when this result is returned.  PTAL.",
      "parentUuid": "b0038afc_d184c681",
      "range": {
        "startLine": 325,
        "startChar": 0,
        "endLine": 327,
        "endChar": 0
      },
      "revId": "3a1c2a078c4ff07f47fd8b61d5620876785b5b6d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59c4f166_58be95c6",
        "filename": "base/file.cpp",
        "patchSetId": 2
      },
      "lineNbr": 327,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2018-12-17T21:34:44Z",
      "side": 1,
      "message": "Yeah, that\u0027s a bit off. ERROR_IO_PENDING is for asynchronous I/O while EAGAIN is non-blocking I/O.\n\nWriteFile would return ERROR_IO_PENDING if the Win32 handle had been opened in FILE_FLAG_OVERLAPPED mode. It indicates that Windows has started an asynchronous I/O request in the background. As it works on the request, it updates the OVERLAPPED object (params) passed to WriteFile. (That object is about to go out of scope, though...)\n\nI\u0027d expect the handle to be a normal non-overlapped handle, though, so ERROR_IO_PENDING should never happen.\n\npread uses EIO as the catch-all error code, but pwrite uses EINVAL. Should they match?",
      "parentUuid": "b0038afc_d184c681",
      "range": {
        "startLine": 325,
        "startChar": 0,
        "endLine": 327,
        "endChar": 0
      },
      "revId": "3a1c2a078c4ff07f47fd8b61d5620876785b5b6d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b27cd40_863fd448",
        "filename": "base/file.cpp",
        "patchSetId": 2
      },
      "lineNbr": 327,
      "author": {
        "id": 1103743
      },
      "writtenOn": "2018-12-17T22:51:46Z",
      "side": 1,
      "message": "EIO was correct.  Fixed.  Otherwise, per our collective discussion, I added a scoped event to the overlap object.",
      "parentUuid": "59c4f166_58be95c6",
      "range": {
        "startLine": 325,
        "startChar": 0,
        "endLine": 327,
        "endChar": 0
      },
      "revId": "3a1c2a078c4ff07f47fd8b61d5620876785b5b6d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}