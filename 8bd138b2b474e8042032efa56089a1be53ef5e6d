{
  "comments": [
    {
      "key": {
        "uuid": "048e0161_9f2300da",
        "filename": "base/file.cpp",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-11-14T18:28:31Z",
      "side": 1,
      "message": "Q: do we want to add any restrictions to this value?\n\nI can not think of any because results are limited to creating unique files and directories underneath _an_ existing directory, and inside a directory we have been granted access to, and they will be cleaned up on destructor. The file is 0600 to the owner, and directory is 0700 to the owner; there are no privileges that these grant to an attack vector.\n\nWe are to trust sepolicy as well, not just the DAC controls already in place.",
      "range": {
        "startLine": 76,
        "startChar": 7,
        "endLine": 76,
        "endChar": 13
      },
      "revId": "8bd138b2b474e8042032efa56089a1be53ef5e6d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f0af773_999b00ea",
        "filename": "base/file.cpp",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-11-14T19:25:29Z",
      "side": 1,
      "message": "don\u0027t duplicate this access check. just delete all this and add\n\n  if (tmpdir \u003d\u003d nullptr) tmpdir \u003d \"/data/local/tmp\";",
      "parentUuid": "048e0161_9f2300da",
      "range": {
        "startLine": 76,
        "startChar": 7,
        "endLine": 76,
        "endChar": 13
      },
      "revId": "8bd138b2b474e8042032efa56089a1be53ef5e6d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b439c87_812d549a",
        "filename": "base/file.cpp",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-11-14T19:43:29Z",
      "side": 1,
      "message": "There is method to the madness, if we can not access the supplied TMPDIR, I wanted it to punt and try \"/data/local/tmp\" before going to local directory.\n\nOne of my unit tests is to fail to create the associated directory, and the tests that depend on these classes do _not_ fail. In case something sets TMPDIR (and I have no doubt this happens on a device) and fails to clear it after use, I do not want subsequent tests to fail.\n\n(so he asks again, does this sound OK, here and in default case below)?",
      "parentUuid": "5f0af773_999b00ea",
      "range": {
        "startLine": 76,
        "startChar": 7,
        "endLine": 76,
        "endChar": 13
      },
      "revId": "8bd138b2b474e8042032efa56089a1be53ef5e6d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22d2a20d_c92d89c1",
        "filename": "base/file.cpp",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-11-14T20:00:13Z",
      "side": 1,
      "message": "no, i think if the user explicitly asked for a TMPDIR we should honor that. (i should have used more words below in my L108 comment.)",
      "parentUuid": "2b439c87_812d549a",
      "range": {
        "startLine": 76,
        "startChar": 7,
        "endLine": 76,
        "endChar": 13
      },
      "revId": "8bd138b2b474e8042032efa56089a1be53ef5e6d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5447e06_a0563cc6",
        "filename": "base/file.cpp",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-11-14T20:49:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "22d2a20d_c92d89c1",
      "range": {
        "startLine": 76,
        "startChar": 7,
        "endLine": 76,
        "endChar": 13
      },
      "revId": "8bd138b2b474e8042032efa56089a1be53ef5e6d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4065659e_7161b29b",
        "filename": "base/file.cpp",
        "patchSetId": 2
      },
      "lineNbr": 91,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-11-14T19:25:29Z",
      "side": 1,
      "message": "strncpy doesn\u0027t guarantee a NUL. never use strncpy. use snprintf if you have to.\n\n*but*... GetTempPath already takes the relevant environment variables into account. you can just delete all this.",
      "revId": "8bd138b2b474e8042032efa56089a1be53ef5e6d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f80a11e2_58432393",
        "filename": "base/file.cpp",
        "patchSetId": 2
      },
      "lineNbr": 91,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-11-14T19:43:29Z",
      "side": 1,
      "message": "I learned something new today! :-) Thanks!",
      "parentUuid": "4065659e_7161b29b",
      "revId": "8bd138b2b474e8042032efa56089a1be53ef5e6d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65a3309b_f6c78bf4",
        "filename": "base/file.cpp",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-11-14T19:25:29Z",
      "side": 1,
      "message": "just honor TMPDIR.",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 108,
        "endChar": 3
      },
      "revId": "8bd138b2b474e8042032efa56089a1be53ef5e6d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58912d5a_0af95cf1",
        "filename": "base/file.cpp",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-11-14T20:49:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65a3309b_f6c78bf4",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 108,
        "endChar": 3
      },
      "revId": "8bd138b2b474e8042032efa56089a1be53ef5e6d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}