{
  "comments": [
    {
      "key": {
        "uuid": "b191e31c_a0c3c47e",
        "filename": "init/Android.mk",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-11-27T08:00:05Z",
      "side": 1,
      "message": "nit: seems can be in one line? and no need the trailing \\ ?\n\nLOCAL_POST_INSTALL_CMD +\u003d ; cp $(TARGET_RAMDISK_OUT)/init $(TARGET_ROOT_OUT)/init",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 71,
        "endChar": 61
      },
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "714380e2_b497147d",
        "filename": "init/Android.mk",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-11-28T00:22:07Z",
      "side": 1,
      "message": "This is definitely wrong.  I can make this change for real in another way.",
      "parentUuid": "b191e31c_a0c3c47e",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 71,
        "endChar": 61
      },
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a250ef3_58d3b12a",
        "filename": "init/Android.mk",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 1135739
      },
      "writtenOn": "2018-11-28T04:45:44Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "714380e2_b497147d",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 71,
        "endChar": 61
      },
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03b6c0a3_f08f6070",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 3
      },
      "lineNbr": 394,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-11-28T00:22:07Z",
      "side": 1,
      "message": "Why is system showing up in the fstab in the first place if we are system-as-root?  It simply shouldn\u0027t be there and there shouldn\u0027t be any logic here to handle it if it exists.",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afd44d4d_b3364a9e",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 3
      },
      "lineNbr": 394,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-11-28T02:18:49Z",
      "side": 1,
      "message": "Right, normal system-as-root shouldn\u0027t have such case.\n\nThis is basically for Live Image, where ucontainder loads a system.img into zram.\nAnd prepares the \"system-as-root\" env, before jump into firs-stage init.\n\nHow about rename it to in_live_image?",
      "parentUuid": "03b6c0a3_f08f6070",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c3a7a1c_fa0be562",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 3
      },
      "lineNbr": 394,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-11-28T03:01:57Z",
      "side": 1,
      "message": "Just to be clear, this is to allow live-image works on \"ramdisk\" devices.\nOtherwise, ramdisk devices will mount /system on the flash (and override what live-image prepared before invoking first-stage init)",
      "parentUuid": "afd44d4d_b3364a9e",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62176e56_d5b900d4",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 3
      },
      "lineNbr": 394,
      "author": {
        "id": 1135739
      },
      "writtenOn": "2018-11-28T04:45:44Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5c3a7a1c_fa0be562",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89e05752_a42b2d39",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 3
      },
      "lineNbr": 394,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-11-28T18:22:10Z",
      "side": 1,
      "message": "I see from the bug comments why this is needed.  It\u0027ll be better to have this is_live_image, like Bowgo mentioned below.  It\u0027ll clarify exactly why this is here.",
      "parentUuid": "62176e56_d5b900d4",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89f9dcea_4ce0e377",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 3
      },
      "lineNbr": 394,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-11-29T04:22:52Z",
      "side": 1,
      "message": "maybe move L390-L402 into another function, e.g., TrySwitchRootToSystem();\n\nThen here, we could have:\nif (getenv(\"INIT_SYSTEM_ROOT_READY\") \u003d\u003d nullptr) {\n  TrySwitchRootToSystem();\n}",
      "parentUuid": "89e05752_a42b2d39",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "321148dd_99db57eb",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 3
      },
      "lineNbr": 394,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-11-29T17:19:44Z",
      "side": 1,
      "message": "We could do that.  But for now with the new design for the live image, this will be unneeded, so we can drop it entirely?",
      "parentUuid": "89f9dcea_4ce0e377",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "348724bd_27a979d5",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 3
      },
      "lineNbr": 394,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-11-30T08:57:56Z",
      "side": 1,
      "message": "Yup, this is unneeded for new live image design.",
      "parentUuid": "321148dd_99db57eb",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc682fb5_a4674bc0",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-11-28T00:22:07Z",
      "side": 1,
      "message": "?  ForceNormalBoot directly implies not having SystemAsRoot (wherein SystemAsRoot is defined as the kernel mounting system.img as the rootfs).",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2552a8c9_f009c993",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-11-28T02:18:49Z",
      "side": 1,
      "message": "IIUC, this is for Live-Image usage, when ucontainer prepares a \"system-as-root\" env, before invoking first-stage init. Basically ucontainer just performs the system-as-root stuff, like what kernel did for system-as-root before.\n\nWith SwitchRoot(\"/first_stage_ramdisk\") here, they *.rc in Live-image (e.g., GSI) will be removed.\n\nDo you think it\u0027s better to s/SystemAsRoot/LiveImage, to make it clear this is for Live Image?",
      "parentUuid": "cc682fb5_a4674bc0",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d176b522_12a6f6cf",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-11-28T02:23:38Z",
      "side": 1,
      "message": "Oh, sorry, I was wrong.\n\nWe also cannot chroot(\"/first_stage_ramdks\") when there is \"skip_initramfs\" in kernel cmdline (L108). Otherwise, those *.rc files in system-as-root (mounted by kernel) will be gone.",
      "parentUuid": "2552a8c9_f009c993",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "100eb91c_72137fe0",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1135739
      },
      "writtenOn": "2018-11-28T04:45:44Z",
      "side": 1,
      "message": "You are right. This is required by both system-only-ota and live image. Thank you for the clarification.",
      "parentUuid": "d176b522_12a6f6cf",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f381b573_2dd4bfc4",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-11-28T18:22:10Z",
      "side": 1,
      "message": "I don\u0027t understand why the system-only-ota case would need this.  ForceNormalBoot() is brand new and only meant for retrofit dm-linear devices that don\u0027t have a ramdisk partition that can be used for first stage init.  No one should ever specify both skip_initramfs and force_normal_boot; that is simply an unsupported combination.",
      "parentUuid": "100eb91c_72137fe0",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e905b624_fb21faad",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-11-29T04:22:52Z",
      "side": 1,
      "message": "Right, for P (system-as-root) devices, it shouldn\u0027t need ForceNormalBoot(), and agree it\u0027s an unsupported conditions.\n\nI\u0027ve chatted with Howard, basically his original idea is that if \"SystemRootIsReady\" (self-contained), avoid this SwitchRoot(\"/first_stage_ramdisk\"); here. Because SystemRoot is mounted, prior to reach here.\n\nMy suggestion will be, adding a function to check if system root is already done.\ne.g.,\n\n// Checks if system partition is already mounted as root and no longer\n// need first-stage to SwitchRoot(\"/first_stage_ramdisk\") and SwitchRoot(\"/system\").\n// e.g., kernel already mounts system as root, or live-image mounts live system\n// image as root from zram.\n\nbool SystemRootReady(int argc, char** argv) {\n    std::string cmdline;\n    // Live image ucontainer will specify \u0027-system_root_ready\u0027 when invoking first-stage init.\n    if (Contains(argc, argv, \"-system_root_ready\")) {\n        return true;\n    }\n    // For system-as-root devices where system is already mounted by kernel.\n    android::base::ReadFileToString(\"/proc/cmdline\", \u0026cmdline);\n    return cmdline.find(\"skip_initramfs\") !\u003d std::string::npos;\n}\n\nAnd set an env var at L128 above.\nif (SystemRootReady(argc, argv)) {\n  CHECKCALL(setenv(\"INIT_SYSTEM_ROOT_READY\", \"true\", 1));\n}\n\nAnd here, we can have (s/ForceNormalBoot/ForceNormalBootRamdisk to make it clear).\n\nif (getenv(\"INIT_SYSTEM_ROOT_READY\")) {\n    LOG(INFO) \u003c\u003c \"System root is ready!\";\n} else if (ForceNormalBootRamdisk()) {    \n    mkdir(\"/first_stage_ramdisk\", 0755);\n    // SwitchRoot() must be called with a mount point as the target, so we bind mount the\n    // target directory to itself here.\n    if (mount(\"/first_stage_ramdisk\", \"/first_stage_ramdisk\", nullptr, MS_BIND, nullptr) !\u003d 0)\n    {\n        LOG(FATAL) \u003c\u003c \"Could not bind mount /first_stage_ramdisk to itself\";\n    }\n    SwitchRoot(\"/first_stage_ramdisk\");\n}",
      "parentUuid": "f381b573_2dd4bfc4",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e143e7a1_d8d3c285",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-11-29T17:19:44Z",
      "side": 1,
      "message": "If we were continuing with android-live this may be something to consider.  But given that we\u0027re not, we shouldn\u0027t make any changes here as this combination is fundamentally unsupported.\n\nFrom what I understand of the new live image design, this code should execute exactly as is.  Regardless of if we\u0027re booting into a live image or not, if we\u0027re booting through recovery, we should do this SwitchRoot to clean the environment before proceeding.",
      "parentUuid": "e905b624_fb21faad",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4f5f249_f63617d7",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1135739
      },
      "writtenOn": "2018-11-30T05:20:39Z",
      "side": 1,
      "message": "Hi Bowgo,\nYes, it looks better by using envvar. Good refining.\n\nHi Tom, \nI don\u0027t have a strong opinion here but in general I\u0027d prefer to check it explicitly and not to depends on any additional implicit knowledge. The external environment may change and break it without caution.",
      "parentUuid": "e143e7a1_d8d3c285",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5e23657_07f563d4",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 222,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-11-28T00:22:07Z",
      "side": 1,
      "message": "This is used to keep the ucontainer ramdisk, right?  That\u0027s the one part that makes sense here.",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a3e4ba1_96e04512",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 222,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-11-28T02:18:49Z",
      "side": 1,
      "message": "Right, this is for Live-Image usage.",
      "parentUuid": "e5e23657_07f563d4",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "355bf875_7dd70ea9",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 222,
      "author": {
        "id": 1135739
      },
      "writtenOn": "2018-11-28T04:45:44Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0a3e4ba1_96e04512",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7714e309_92397c20",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-11-28T00:22:07Z",
      "side": 1,
      "message": "Where would this file ever exist?",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85d1dee8_0dbfb8a3",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 1135739
      },
      "writtenOn": "2018-11-28T04:45:44Z",
      "side": 1,
      "message": "Ack. Should be removed",
      "parentUuid": "7714e309_92397c20",
      "revId": "5e26dc1fd31aa7b8db45141d869317dfc6a5eb27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}