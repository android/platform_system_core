cc_defaults {
    name: "libfdsan_defaults",

    cpp_std: "gnu++17",
    compile_multilib: "both",
    cflags: [
        "-Werror",
        "-Wall",
        "-Wextra",
        "-Wformat-nonliteral",
        "-Wexit-time-destructors",
        "-U_FORTIFY_SOURCE",
    ],

    local_include_dirs: ["include"],

    strip: {
        keep_symbols: true,
    },
}

cc_library_static {
    name: "libfdsan_bionic_stubs",
    defaults: ["libfdsan_defaults"],
    stl: "none",

    srcs: ["standalone/bionic_stubs.cpp"],
}

cc_library_shared {
    name: "libfdsan_standalone",
    defaults: ["libfdsan_defaults"],
    stl: "none",
    system_shared_libs: [],

    ldflags: ["-Wl,--exclude-libs,ALL"],

    srcs: [
        "standalone/backtrace.cpp",
        "standalone/wrappers.cpp"
    ],

    local_include_dirs: ["standalone/include"],
    export_include_dirs: ["standalone/include"],

    version_script: "standalone/libfdsan_standalone.map",

    static_libs: [
        "libbacktrace",
        "libunwindstack",

        "libdexfile",
        "libziparchive",
        "libz",
        "libutils",

        "libbase",
        "liblog",
        "liblzma",

        "libasync_safe",

        "libc++_static",

        // Statically link libc, except for pthread internals, which we have to get
        // from libc.so, so we don't stomp on existing pthread_keys.
        "libc_pthread_types",
        "libc_malloc",
        "libc_nopthread",
        "libfdsan_bionic_stubs",
    ],

    shared_libs: ["libc", "libdl"],
}

cc_library_shared {
    name: "libfdsan",
    defaults: ["libfdsan_defaults"],
    stl: "none",

    // Many of our wrappers tail call an fdsan_record function, resulting in
    // their frames being elided.
    cflags: ["-fno-optimize-sibling-calls"],
    ldflags: ["-Wl,--exclude-libs,ALL"],

    srcs: [
        "fdsan.cpp",
        "wrappers/close.cpp",
        "wrappers/dlopen.cpp",
        "wrappers/dup.cpp",
        "wrappers/open.cpp",
        "wrappers/misc.cpp",
        "wrappers/mkstemp.cpp",
        "wrappers/recvmsg.cpp",
        "wrappers/socket.cpp",
    ],

    version_script: "libfdsan.map",

    shared_libs: [
        "libfdsan_standalone",
    ],

    static_libs: [
        "libasync_safe",
        "libc++_static",
    ],

    header_libs: [
        "libbase_headers",
    ],

    export_include_dirs: ["include"],
}

cc_library_static {
    name: "libfdsan_test",
    defaults: ["libfdsan_defaults"],
    srcs: [
        "test/fdsan_test.cpp",
        "test/fdsan_wrapper_test.cpp",
    ],

    static_libs: [
        "libbase",
        "libgtest",
    ],

    shared_libs: [
        "libfdsan",
    ]
}

cc_test {
    name: "fdsan_test",
    defaults: ["libfdsan_defaults"],

    whole_static_libs: ["libfdsan_test"],
    shared_libs: ["libfdsan"],
}

cc_test {
    name: "fdsan_test_preload",
    defaults: ["libfdsan_defaults"],

    srcs: ["test/fdsan_preload.cpp"],

    whole_static_libs: ["libfdsan_test"],
}

cc_benchmark {
    name: "fdsan_benchmark",
    defaults: ["libfdsan_defaults"],

    srcs: [
        "test/fdsan_benchmark.cpp",
    ],

    shared_libs: [
        "libfdsan_standalone",
    ],
}
