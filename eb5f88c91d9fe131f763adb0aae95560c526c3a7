{
  "comments": [
    {
      "key": {
        "uuid": "e365c2a6_d84acd5b",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-06-07T17:43:50Z",
      "side": 1,
      "message": "nit:\n\nauto dm_name_file \u003d \"/sys/block/\"s + bdev + \"/dm/name\";\n\nNB: C++ string literal.",
      "range": {
        "startLine": 101,
        "startChar": 24,
        "endLine": 101,
        "endChar": 91
      },
      "revId": "eb5f88c91d9fe131f763adb0aae95560c526c3a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a4b2f49_979d6412",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-06-07T18:14:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e365c2a6_d84acd5b",
      "range": {
        "startLine": 101,
        "startChar": 24,
        "endLine": 101,
        "endChar": 91
      },
      "revId": "eb5f88c91d9fe131f763adb0aae95560c526c3a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "300c0ca1_60c401aa",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-06-07T17:43:50Z",
      "side": 1,
      "message": "How? You do not give the caller the option to continue?",
      "range": {
        "startLine": 122,
        "startChar": 0,
        "endLine": 123,
        "endChar": 27
      },
      "revId": "eb5f88c91d9fe131f763adb0aae95560c526c3a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7477cda2_3926410c",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-06-07T18:14:32Z",
      "side": 1,
      "message": "I\u0027ll clarify this comment. Basically, we always want this to be an error, except for tests, since it\u0027s useful to be able to stop at a specific dm node for simulating different devices types. I\u0027m working on a companion patch to gsid to check that the underlying block device is really \"userdata\" and not something like \"dm-rando-device\".",
      "parentUuid": "300c0ca1_60c401aa",
      "range": {
        "startLine": 122,
        "startChar": 0,
        "endLine": 123,
        "endChar": 27
      },
      "revId": "eb5f88c91d9fe131f763adb0aae95560c526c3a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a1b5624_4cf6fcd7",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-06-07T19:52:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7477cda2_3926410c",
      "range": {
        "startLine": 122,
        "startChar": 0,
        "endLine": 123,
        "endChar": 27
      },
      "revId": "eb5f88c91d9fe131f763adb0aae95560c526c3a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "938efe47_0d48a8df",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-06-07T17:43:50Z",
      "side": 1,
      "message": "nit: which target type stopped us?\n\n...target-type \" \u003c\u003c entry.target_type \u003c\u003c \" for \"...",
      "range": {
        "startLine": 131,
        "startChar": 42,
        "endLine": 131,
        "endChar": 57
      },
      "revId": "eb5f88c91d9fe131f763adb0aae95560c526c3a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71154520_ccecb1a3",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-06-07T18:14:32Z",
      "side": 1,
      "message": "I believe it\u0027s not zero-terminated and I got lazy... is there a decent C++ pattern for stringifying things like this? Or can we just accept extra null terminators and let c_str() do the right thing?",
      "parentUuid": "938efe47_0d48a8df",
      "range": {
        "startLine": 131,
        "startChar": 42,
        "endLine": 131,
        "endChar": 57
      },
      "revId": "eb5f88c91d9fe131f763adb0aae95560c526c3a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2306cb3_40a03b41",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-06-07T18:15:53Z",
      "side": 1,
      "message": "By that I mean, it\u0027s null terminated as long as the name doesn\u0027t fill all bytes of the buffer, strncpy-style.",
      "parentUuid": "71154520_ccecb1a3",
      "range": {
        "startLine": 131,
        "startChar": 42,
        "endLine": 131,
        "endChar": 57
      },
      "revId": "eb5f88c91d9fe131f763adb0aae95560c526c3a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d96ec8b2_d16de1ec",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-06-07T19:52:03Z",
      "side": 1,
      "message": "Hmmm\n\nstd::string(entry.target_type, sizeof(entry.target_type)).c_str()",
      "parentUuid": "a2306cb3_40a03b41",
      "range": {
        "startLine": 131,
        "startChar": 42,
        "endLine": 131,
        "endChar": 57
      },
      "revId": "eb5f88c91d9fe131f763adb0aae95560c526c3a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3c73ef3_ae717caf",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-06-07T20:34:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d96ec8b2_d16de1ec",
      "range": {
        "startLine": 131,
        "startChar": 42,
        "endLine": 131,
        "endChar": 57
      },
      "revId": "eb5f88c91d9fe131f763adb0aae95560c526c3a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3bc3c81_2ee4ad51",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-06-07T17:43:50Z",
      "side": 1,
      "message": "nit:\n\nauto dm_leaf_dir \u003d \"/sys/block/\"s + bdev + \"/slaves\";",
      "range": {
        "startLine": 135,
        "startChar": 4,
        "endLine": 135,
        "endChar": 96
      },
      "revId": "eb5f88c91d9fe131f763adb0aae95560c526c3a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbbd8f24_d5c507c1",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-06-07T18:14:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e3bc3c81_2ee4ad51",
      "range": {
        "startLine": 135,
        "startChar": 4,
        "endLine": 135,
        "endChar": 96
      },
      "revId": "eb5f88c91d9fe131f763adb0aae95560c526c3a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}