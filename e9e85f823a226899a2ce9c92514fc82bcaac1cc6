{
  "comments": [
    {
      "key": {
        "uuid": "0ee13fb4_dd6a07bb",
        "filename": "fs_mgr/libsnapshot/snapshot.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1966,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-09-23T22:11:43Z",
      "side": 1,
      "message": "It\u0027d be nice to re-use this within dumpstate, but I worry about the locking causing dumpstate to give up on waiting for a result. Should we consider having lockless reads (or a bogus proof-of-lock) in this method? For diagnostics it\u0027d be fine to read back partially written data. Or, are we reasonably confident that any holders of the lock will drop it in 10s?",
      "revId": "e9e85f823a226899a2ce9c92514fc82bcaac1cc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cb3def3_1f4dffc7",
        "filename": "fs_mgr/libsnapshot/snapshot.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1966,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-09-23T23:42:55Z",
      "side": 1,
      "message": "Good point. I looked at all locks in this class and the only suspicious thing is CreateUpdateSnapshots (which has multiple binder calls, CreateLogicalPartition calls, and writing to images), which does not necessary finish in 10s. \n\nWhat happens if I don\u0027t actually hold the lock?\n\n- ReadUpdateState() can be replaced by GetUpdateState(double*)\n- ListSnapshots() might crash at some point because readdir isn\u0027t guaranteed to be correct if the directory is modified during the read? Not sure...\n- We can give ReadSnapshotStatus() a bogus lock.",
      "parentUuid": "0ee13fb4_dd6a07bb",
      "revId": "e9e85f823a226899a2ce9c92514fc82bcaac1cc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9c2eb5f_036cefd1",
        "filename": "fs_mgr/libsnapshot/snapshot.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1966,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-09-24T00:01:26Z",
      "side": 1,
      "message": "GetUpdateState takes a lock - but we could replace it by calling access() and ReadFileToString.\n\nIf we added an OpenIgnoreLock() or something, everything would work as-is. We could read back racy data, but the worst that could happen is some inconsistent information in the diagnostics.\n\nIt\u0027d be nice if we could yield to readlocks in CreateUpdateSnapshots, but I don\u0027t think it\u0027s worth worrying about right now. Better to have the update process be safe than the diagnostics guaranteed to be 100% perfect.",
      "parentUuid": "7cb3def3_1f4dffc7",
      "revId": "e9e85f823a226899a2ce9c92514fc82bcaac1cc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88e69e98_68024b3d",
        "filename": "fs_mgr/libsnapshot/snapshot.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1966,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-09-24T01:51:36Z",
      "side": 1,
      "message": "Done, ptal",
      "parentUuid": "b9c2eb5f_036cefd1",
      "revId": "e9e85f823a226899a2ce9c92514fc82bcaac1cc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}