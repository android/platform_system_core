//
// Copyright (C) 2017 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

cc_defaults {
    name: "libunwindstack_common",

    cflags: [
        "-Wall",
        "-Werror",
        "-Wextra",
        "-O0",
        "-g",
    ],

    multilib: {
        lib32: {
            suffix: "32",
        },
        lib64: {
            suffix: "64",
        },
    },
}

cc_library {
    name: "libunwindstack",
    defaults: ["libunwindstack_common"],
    host_supported: true,

    srcs: [
        "ArmExidx.cpp",
        "DwarfCfa.cpp",
        "Elf.cpp",
        "ElfInterfaceArm.cpp",
        "Log.cpp",
        "Maps.cpp",
        "Memory.cpp",
        "Remote.cpp",
    ],
    arch: {
        x86: {
            srcs: ["LocalGetRegsX86.S"],
        },
        x86_64: {
            srcs: ["LocalGetRegsX86_64.S"],
        },
    },

    shared_libs: [
        "libbase",
        "liblog",
    ],
}

//-------------------------------------------------------------------------
// Unit Tests
//-------------------------------------------------------------------------
cc_test {
    name: "libunwindstack_test",
    defaults: ["libunwindstack_common"],
    host_supported: true,

    srcs: [
        "tests/ArmExidxDecodeTest.cpp",
        "tests/ArmExidxExtractTest.cpp",
        "tests/DwarfCfaLogTest.cpp",
        "tests/DwarfCfaTest.cpp",
        "tests/DwarfOpLogTest.cpp",
        "tests/DwarfOpTest.cpp",
        "tests/ElfInterfaceArmTest.cpp",
        "tests/ElfInterfaceTest.cpp",
        "tests/ElfTest.cpp",
        "tests/LogFake.cpp",
        "tests/MapsTest.cpp",
        "tests/MemoryFileTest.cpp",
        "tests/MemoryLocalTest.cpp",
        "tests/MemoryRangeTest.cpp",
        "tests/MemoryRemoteTest.cpp",
        "tests/MemoryFake.cpp",
        "tests/RegsTest.cpp",
        "tests/SymbolsTest.cpp",
    ],

    cflags: [
        "-O0",
        "-g",
    ],

    shared_libs: [
        "libunwindstack",
        "libbase",
        "liblog",
    ],

    target: {
        darwin: {
            enabled: false,
        },
        linux: {
            host_ldlibs: [
                "-lrt",
            ],
        },
    },
}

cc_defaults {
    name: "libunwindstack_executables",
    defaults: ["libunwindstack_common"],
    host_supported: true,

    shared_libs: [
        "libunwindstack",
        "libbase",
    ],

    target: {
        darwin: {
            enabled: false,
        },
        linux: {
            host_ldlibs: [
                "-lrt",
            ],
        },
    },

    compile_multilib: "both",
}

cc_binary {
    name: "unwind",
    defaults: ["libunwindstack_executables"],

    srcs: [
        "unwind.cpp",
    ],
}

cc_binary {
    name: "unwind_info",
    defaults: ["libunwindstack_executables"],

    srcs: [
        "unwind_info.cpp",
    ],
}

cc_binary {
    name: "unwind_offline",
    defaults: ["libunwindstack_executables"],

    srcs: [
        "unwind_offline.cpp",
    ],
}
