{
  "comments": [
    {
      "key": {
        "uuid": "a275852a_98525773",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 1
      },
      "lineNbr": 461,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-03-15T14:33:28Z",
      "side": 1,
      "message": "Do not set the entry with first_stage_mount flag and it will not try to mount it. See 149-153.\n\nOr, do not put the entries in the dt_tab (for traditional configuration, no longer supported in Q)",
      "range": {
        "startLine": 461,
        "startChar": 19,
        "endLine": 461,
        "endChar": 47
      },
      "revId": "004a8b7893cfe90937718b13a576fbce279bbf47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6e03563_d88ce62c",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 1
      },
      "lineNbr": 461,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-03-18T03:28:26Z",
      "side": 1,
      "message": "Right, but they need the uevent of this partition to be processed (without mounting).\nSee required_devices_partition_names_ at L279.\n\ni.e., adding the /dev/block/by-name/modem_a, /dev/block/by-name/abl_a, during first-stage mount.",
      "parentUuid": "a275852a_98525773",
      "range": {
        "startLine": 461,
        "startChar": 19,
        "endLine": 461,
        "endChar": 47
      },
      "revId": "004a8b7893cfe90937718b13a576fbce279bbf47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6a250ab_2ef4ee76",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 1
      },
      "lineNbr": 461,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-03-18T15:21:37Z",
      "side": 1,
      "message": "Sounds like we need to provide another flag (eg: first-stage-discover), might serve us better, there are bound to be more of these? This only creates confusion by overloading a complicated set of flags and conditions. We can add this in a dependent patch to fs_mgr, and it will only be a few lines and adds clarity to the flag(s).",
      "parentUuid": "a6e03563_d88ce62c",
      "range": {
        "startLine": 461,
        "startChar": 19,
        "endLine": 461,
        "endChar": 47
      },
      "revId": "004a8b7893cfe90937718b13a576fbce279bbf47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d57e053_a0f31045",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 1
      },
      "lineNbr": 461,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-03-19T04:25:58Z",
      "side": 1,
      "message": "OK, adding \"first_stage_discover\" or \"first_stage_probe\" SGTM.",
      "parentUuid": "a6a250ab_2ef4ee76",
      "range": {
        "startLine": 461,
        "startChar": 19,
        "endLine": 461,
        "endChar": 47
      },
      "revId": "004a8b7893cfe90937718b13a576fbce279bbf47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}