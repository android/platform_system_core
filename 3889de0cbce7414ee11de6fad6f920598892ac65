{
  "comments": [
    {
      "key": {
        "uuid": "65485e48_024ee6bc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-03-14T00:38:24Z",
      "side": 1,
      "message": "we should probably move crash_dump into the runtime apex if we want to rely on this...",
      "range": {
        "startLine": 16,
        "startChar": 34,
        "endLine": 17,
        "endChar": 18
      },
      "revId": "3889de0cbce7414ee11de6fad6f920598892ac65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2cf93bc_2464ea27",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2020-03-14T00:54:48Z",
      "side": 1,
      "message": "Sure. It\u0027s not clear whether we want to do this right away though, since there are probably many other blockers to making the runtime apex updatable.",
      "parentUuid": "65485e48_024ee6bc",
      "range": {
        "startLine": 16,
        "startChar": 34,
        "endLine": 17,
        "endChar": 18
      },
      "revId": "3889de0cbce7414ee11de6fad6f920598892ac65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ba0ec76_ab1e1b0a",
        "filename": "debuggerd/crash_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 268,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-03-13T23:33:59Z",
      "side": 1,
      "message": "Given that version #2/#3 are now deprecated, do we want to handle them by silently falling back to #1, or do we want to error_log as well?",
      "range": {
        "startLine": 267,
        "startChar": 6,
        "endLine": 268,
        "endChar": 13
      },
      "revId": "3889de0cbce7414ee11de6fad6f920598892ac65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a1cbbd1_6dfac787",
        "filename": "debuggerd/crash_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 268,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2020-03-13T23:43:44Z",
      "side": 1,
      "message": "I wouldn\u0027t say that it\u0027s an \"error\" to run an old executable using 2 or 3, so it\u0027s not clear that erroring is appropriate.",
      "parentUuid": "5ba0ec76_ab1e1b0a",
      "range": {
        "startLine": 267,
        "startChar": 6,
        "endLine": 268,
        "endChar": 13
      },
      "revId": "3889de0cbce7414ee11de6fad6f920598892ac65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3dccf1ee_72040373",
        "filename": "debuggerd/handler/debuggerd_handler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 345,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2020-03-13T23:43:15Z",
      "side": 1,
      "message": "Is switching this to be signed intentional?",
      "range": {
        "startLine": 345,
        "startChar": 2,
        "endLine": 345,
        "endChar": 9
      },
      "revId": "3889de0cbce7414ee11de6fad6f920598892ac65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9af149dd_2e801287",
        "filename": "debuggerd/handler/debuggerd_handler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 345,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2020-03-13T23:45:36Z",
      "side": 1,
      "message": "Yes, otherwise we hit a signed/unsigned mismatch error on line 377 (of the new code).",
      "parentUuid": "3dccf1ee_72040373",
      "range": {
        "startLine": 345,
        "startChar": 2,
        "endLine": 345,
        "endChar": 9
      },
      "revId": "3889de0cbce7414ee11de6fad6f920598892ac65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89b72059_f658c703",
        "filename": "debuggerd/handler/debuggerd_handler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 345,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2020-03-13T23:50:04Z",
      "side": 1,
      "message": "Ah, I missed that.",
      "parentUuid": "9af149dd_2e801287",
      "range": {
        "startLine": 345,
        "startChar": 2,
        "endLine": 345,
        "endChar": 9
      },
      "revId": "3889de0cbce7414ee11de6fad6f920598892ac65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2608725b_f4cb7cf4",
        "filename": "debuggerd/handler/debuggerd_handler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2020-03-13T23:43:15Z",
      "side": 1,
      "message": "This seems like the wrong check for testing whether we\u0027re static or dynamic, but I can\u0027t really think of a better one.",
      "range": {
        "startLine": 353,
        "startChar": 0,
        "endLine": 354,
        "endChar": 49
      },
      "revId": "3889de0cbce7414ee11de6fad6f920598892ac65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e08be146_4fdd665e",
        "filename": "debuggerd/handler/debuggerd_handler.cpp",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2020-03-13T23:45:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2608725b_f4cb7cf4",
      "range": {
        "startLine": 353,
        "startChar": 0,
        "endLine": 354,
        "endChar": 49
      },
      "revId": "3889de0cbce7414ee11de6fad6f920598892ac65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}