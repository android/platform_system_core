{
  "comments": [
    {
      "key": {
        "uuid": "ab00c54e_83d6fe48",
        "filename": "base/include/android-base/parsefloat.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-08-09T00:51:00Z",
      "side": 1,
      "message": "probably better in parsedouble.h as a specialization of a template that we can also use for `long double`.",
      "range": {
        "startLine": 30,
        "startChar": 19,
        "endLine": 30,
        "endChar": 29
      },
      "revId": "3d10122324421324ff2a65909919ea9c0cd54104",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90c092a7_78ef1c21",
        "filename": "base/include/android-base/parsefloat.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2018-08-09T00:53:05Z",
      "side": 1,
      "message": "template out the float type so that this works with doubles, as well? (or just only provide a double version, since people usually shouldn\u0027t be using float...)",
      "range": {
        "startLine": 29,
        "startChar": 68,
        "endLine": 30,
        "endChar": 56
      },
      "revId": "3d10122324421324ff2a65909919ea9c0cd54104",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8969480_34ca783c",
        "filename": "base/include/android-base/parsefloat.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-09T00:59:45Z",
      "side": 1,
      "message": "how best to handle strtof vs strtod? Are you suggesting always calling strtod?",
      "parentUuid": "ab00c54e_83d6fe48",
      "range": {
        "startLine": 30,
        "startChar": 19,
        "endLine": 30,
        "endChar": 29
      },
      "revId": "3d10122324421324ff2a65909919ea9c0cd54104",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e9aab10_fb631a74",
        "filename": "base/include/android-base/parsefloat.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-08-09T01:01:16Z",
      "side": 1,
      "message": "the function can be one of the template parameters too, no?",
      "parentUuid": "e8969480_34ca783c",
      "range": {
        "startLine": 30,
        "startChar": 19,
        "endLine": 30,
        "endChar": 29
      },
      "revId": "3d10122324421324ff2a65909919ea9c0cd54104",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc417976_312b2d24",
        "filename": "base/include/android-base/parsefloat.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-09T01:03:18Z",
      "side": 1,
      "message": "Yeah, I just don\u0027t think it\u0027s particularly clean to do that.",
      "parentUuid": "1e9aab10_fb631a74",
      "range": {
        "startLine": 30,
        "startChar": 19,
        "endLine": 30,
        "endChar": 29
      },
      "revId": "3d10122324421324ff2a65909919ea9c0cd54104",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b445f0aa_37a5768f",
        "filename": "base/include/android-base/parsefloat.h",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2018-08-09T00:53:05Z",
      "side": 1,
      "message": "Should these be negative and positive infinity?",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 78
      },
      "revId": "3d10122324421324ff2a65909919ea9c0cd54104",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc62010f_4dc59273",
        "filename": "base/include/android-base/parsefloat.h",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-09T00:59:45Z",
      "side": 1,
      "message": "It\u0027s consistent w/ double.",
      "parentUuid": "b445f0aa_37a5768f",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 78
      },
      "revId": "3d10122324421324ff2a65909919ea9c0cd54104",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "175b6041_390a7d35",
        "filename": "base/include/android-base/parsefloat.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2018-08-09T00:53:05Z",
      "side": 1,
      "message": "I\u0027m not sure if whether you intend for nan to be a valid result of this function, but right now, it is. (also, -inf and inf are impossible to get from this function.)",
      "range": {
        "startLine": 38,
        "startChar": 3,
        "endLine": 41,
        "endChar": 3
      },
      "revId": "3d10122324421324ff2a65909919ea9c0cd54104",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a713d3c_a155d375",
        "filename": "base/include/android-base/parsefloat.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-09T00:59:45Z",
      "side": 1,
      "message": "This is consistent w/ double.",
      "parentUuid": "175b6041_390a7d35",
      "range": {
        "startLine": 38,
        "startChar": 3,
        "endLine": 41,
        "endChar": 3
      },
      "revId": "3d10122324421324ff2a65909919ea9c0cd54104",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96de2eac_eb9e31d2",
        "filename": "base/parsefloat_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-08-09T00:51:00Z",
      "side": 1,
      "message": "it\u0027ll keep the tests together too, which is handy given their copy \u0026 paste nature...",
      "range": {
        "startLine": 21,
        "startChar": 5,
        "endLine": 21,
        "endChar": 15
      },
      "revId": "3d10122324421324ff2a65909919ea9c0cd54104",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}