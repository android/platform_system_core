{
  "comments": [
    {
      "key": {
        "uuid": "18a771f5_07b9be04",
        "filename": "init/property_service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-04-22T17:50:32Z",
      "side": 1,
      "message": "doing this as a side-effect of property_init seems weird?",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 119,
        "endChar": 0
      },
      "revId": "00efc79a1532220da516d718613e33556254142a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5615743_3217f980",
        "filename": "init/property_service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-04-22T17:56:06Z",
      "side": 1,
      "message": "Does it though?  I don\u0027t like the idea of doing it in selinux.cpp, since it\u0027s more tightly coupled to property_service.cpp (which actually fills in the PropertyAuditData and generates these audits) than it is to selinux.  \n\nDoing it here essentially means that property_init() sets up the property area and sets up the audit call back so any future property set will be handled correctly.  Any other place means that there may be a time the property area is set up and property set calls may happen, but we\u0027re not sure if the audits will be accurate.",
      "parentUuid": "18a771f5_07b9be04",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 119,
        "endChar": 0
      },
      "revId": "00efc79a1532220da516d718613e33556254142a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ef8b78c_ad9d6812",
        "filename": "init/property_service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-04-22T18:55:58Z",
      "side": 1,
      "message": "ah, looking more closely i see. maybe rename SelinuxAuditCallback to something more specific?\n\n(or can we make the implementation more general? this seems a bit weird to me --- how do we _know_ we only get property audit callbacks?)",
      "parentUuid": "b5615743_3217f980",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 119,
        "endChar": 0
      },
      "revId": "00efc79a1532220da516d718613e33556254142a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b29e81d_64949859",
        "filename": "init/property_service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-04-22T20:02:44Z",
      "side": 1,
      "message": "I renamed it to make it a bit more clear it\u0027s for properties and not generic selinux issues.\n\nThe callback only gets called by selinux_check_access(), which we have very few callers of in Android, none of which are libraries themselves, so this file should have the only callers for init.",
      "parentUuid": "9ef8b78c_ad9d6812",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 119,
        "endChar": 0
      },
      "revId": "00efc79a1532220da516d718613e33556254142a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}