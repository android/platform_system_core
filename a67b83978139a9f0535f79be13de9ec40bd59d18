{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b9621645_03b61aa8",
        "filename": "fs_mgr/libsnapshot/cow_snapuserd_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2020-10-16T00:20:00Z",
      "side": 1,
      "message": "Does /data/gsi/ota/test work? (You can mkdir it on startup if it doesn\u0027t exist). I think we have sepolicy in place and our other tests work within there.",
      "revId": "a67b83978139a9f0535f79be13de9ec40bd59d18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a106396_e16a7211",
        "filename": "fs_mgr/libsnapshot/cow_snapuserd_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2020-10-16T00:24:43Z",
      "side": 1,
      "message": "I did try /data/gsi/ota/test; it still continues to fail with selinux denial.",
      "parentUuid": "b9621645_03b61aa8",
      "revId": "a67b83978139a9f0535f79be13de9ec40bd59d18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5abf2413_387478d9",
        "filename": "fs_mgr/libsnapshot/cow_snapuserd_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2020-10-16T00:51:43Z",
      "side": 1,
      "message": "Can you post the audit2allow line for the denial? I\u0027m curious because we definitely create loop devices in this path. If it\u0027s not going to work, it\u0027s probably better to use ImageManager than put temp files in /data/nativetest.",
      "parentUuid": "1a106396_e16a7211",
      "revId": "a67b83978139a9f0535f79be13de9ec40bd59d18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af691779_42eb809c",
        "filename": "fs_mgr/libsnapshot/cow_snapuserd_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2020-10-16T02:38:35Z",
      "side": 1,
      "message": "As discussed offline, temp files are created current working directory",
      "parentUuid": "5abf2413_387478d9",
      "revId": "a67b83978139a9f0535f79be13de9ec40bd59d18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00d391b9_1140cc97",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/snapuserd.h",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2020-10-16T00:20:00Z",
      "side": 1,
      "message": "Do we need to differentiate the path from device, or can we pass the path in directly?",
      "revId": "a67b83978139a9f0535f79be13de9ec40bd59d18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e650adc0_f95acd88",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/snapuserd.h",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2020-10-16T00:24:43Z",
      "side": 1,
      "message": "yeah.. that can be done.. caller has to call the complete path. I can fix this as it will be in sync with other two arguments which takes the complete path.",
      "parentUuid": "00d391b9_1140cc97",
      "revId": "a67b83978139a9f0535f79be13de9ec40bd59d18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f1fbf76_f73910b6",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/snapuserd.h",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2020-10-16T02:38:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e650adc0_f95acd88",
      "revId": "a67b83978139a9f0535f79be13de9ec40bd59d18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}