{
  "comments": [
    {
      "key": {
        "uuid": "a45533f7_64754495",
        "filename": "trusty/confirmationui/Android.bp",
        "patchSetId": 4
      },
      "lineNbr": 3,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2020-01-15T05:09:56Z",
      "side": 1,
      "message": "AOSP license pls",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 3,
        "endChar": 39
      },
      "revId": "0758ec5e6f3adbe1b30f02a2c9f3556aabfa686a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8b250e7_53ff5d2c",
        "filename": "trusty/confirmationui/TrustyApp.cpp",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2020-01-15T05:09:56Z",
      "side": 1,
      "message": "Somewhat counter-intuitive given that at this point the response message has not been received, i.e. should be a lot remaining",
      "range": {
        "startLine": 95,
        "startChar": 24,
        "endLine": 95,
        "endChar": 25
      },
      "revId": "0758ec5e6f3adbe1b30f02a2c9f3556aabfa686a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b10f9506_aecad848",
        "filename": "trusty/confirmationui/TrustyApp.cpp",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2020-01-15T05:09:56Z",
      "side": 1,
      "message": "s/0/remaining\nor remove",
      "range": {
        "startLine": 100,
        "startChar": 25,
        "endLine": 100,
        "endChar": 26
      },
      "revId": "0758ec5e6f3adbe1b30f02a2c9f3556aabfa686a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d7e88cd_faf89ba7",
        "filename": "trusty/confirmationui/TrustyApp.h",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2020-01-15T05:09:56Z",
      "side": 1,
      "message": "nit: \"#pragma\" once for consistency",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 29
      },
      "revId": "0758ec5e6f3adbe1b30f02a2c9f3556aabfa686a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa92fe8a_d2d21ba6",
        "filename": "trusty/confirmationui/TrustyApp.h",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2020-01-15T05:09:56Z",
      "side": 1,
      "message": "It seems intuitive to me to assume that \"o\" and \"i\" stand for output and input. It doesn\u0027t make sense here though?",
      "range": {
        "startLine": 65,
        "startChar": 30,
        "endLine": 66,
        "endChar": 31
      },
      "revId": "0758ec5e6f3adbe1b30f02a2c9f3556aabfa686a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89dba893_4652f6c2",
        "filename": "trusty/confirmationui/TrustyApp.h",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2020-01-15T05:09:56Z",
      "side": 1,
      "message": "Assuming that this mutex protects the handle, it should also be locked in start() and the destructor()",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 72,
        "endChar": 22
      },
      "revId": "0758ec5e6f3adbe1b30f02a2c9f3556aabfa686a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "107ae220_58f55d23",
        "filename": "trusty/confirmationui/TrustyApp.h",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2020-01-15T05:09:56Z",
      "side": 1,
      "message": "nit: use lock_guard to make it clear that the mutex is not unlocked until the end of the scope",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 99,
        "endChar": 50
      },
      "revId": "0758ec5e6f3adbe1b30f02a2c9f3556aabfa686a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb39e968_ddcd64a1",
        "filename": "trusty/confirmationui/TrustyApp.h",
        "patchSetId": 4
      },
      "lineNbr": 154,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2020-01-15T05:09:56Z",
      "side": 1,
      "message": "remove",
      "range": {
        "startLine": 151,
        "startChar": 0,
        "endLine": 154,
        "endChar": 59
      },
      "revId": "0758ec5e6f3adbe1b30f02a2c9f3556aabfa686a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf1f4f38_528328fb",
        "filename": "trusty/confirmationui/TrustyConfirmationUI.cpp",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2020-01-15T18:03:59Z",
      "side": 1,
      "message": "Remove if unused",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 31
      },
      "revId": "0758ec5e6f3adbe1b30f02a2c9f3556aabfa686a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d23a674_ad4c0818",
        "filename": "trusty/confirmationui/TrustyConfirmationUI.cpp",
        "patchSetId": 4
      },
      "lineNbr": 297,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2020-01-15T05:09:56Z",
      "side": 1,
      "message": "document this magic number",
      "range": {
        "startLine": 297,
        "startChar": 17,
        "endLine": 297,
        "endChar": 19
      },
      "revId": "0758ec5e6f3adbe1b30f02a2c9f3556aabfa686a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a863ef29_401e05a1",
        "filename": "trusty/confirmationui/TrustyConfirmationUI.cpp",
        "patchSetId": 4
      },
      "lineNbr": 324,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2020-01-15T18:03:59Z",
      "side": 1,
      "message": "Did you mean to lock the mutex?",
      "range": {
        "startLine": 324,
        "startChar": 0,
        "endLine": 324,
        "endChar": 22
      },
      "revId": "0758ec5e6f3adbe1b30f02a2c9f3556aabfa686a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "593cd234_e3acc737",
        "filename": "trusty/confirmationui/TrustyConfirmationUI.cpp",
        "patchSetId": 4
      },
      "lineNbr": 366,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2020-01-15T18:03:59Z",
      "side": 1,
      "message": "You need to have evResultLock locked here too.\n\nIt might be cleaner to treat eventRC as part of state of the HAL (like abort_called_ and secureInputDelivered_) and protect it with stateLock.",
      "range": {
        "startLine": 366,
        "startChar": 15,
        "endLine": 366,
        "endChar": 22
      },
      "revId": "0758ec5e6f3adbe1b30f02a2c9f3556aabfa686a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fbb58c6_0bfefb84",
        "filename": "trusty/confirmationui/TrustyConfirmationUI.cpp",
        "patchSetId": 4
      },
      "lineNbr": 466,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2020-01-15T18:03:59Z",
      "side": 1,
      "message": "Does this mean that we queue events while we\u0027re in non-interactive state? If so, why?",
      "range": {
        "startLine": 466,
        "startChar": 44,
        "endLine": 466,
        "endChar": 96
      },
      "revId": "0758ec5e6f3adbe1b30f02a2c9f3556aabfa686a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15fff9e3_a32a45f9",
        "filename": "trusty/confirmationui/TrustyConfirmationUI.cpp",
        "patchSetId": 4
      },
      "lineNbr": 473,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2020-01-15T18:03:59Z",
      "side": 1,
      "message": "Do we only use this function for testing on Trusty-based devices?",
      "range": {
        "startLine": 472,
        "startChar": 0,
        "endLine": 473,
        "endChar": 82
      },
      "revId": "0758ec5e6f3adbe1b30f02a2c9f3556aabfa686a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d7782ed_66f206a4",
        "filename": "trusty/confirmationui/TrustyConfirmationUI.cpp",
        "patchSetId": 4
      },
      "lineNbr": 493,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2020-01-15T18:03:59Z",
      "side": 1,
      "message": "Why can\u0027t abort be called during other stages?",
      "range": {
        "startLine": 492,
        "startChar": 0,
        "endLine": 493,
        "endChar": 60
      },
      "revId": "0758ec5e6f3adbe1b30f02a2c9f3556aabfa686a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}