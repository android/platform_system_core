syntax = "proto3";

// google.protobuf.Timestamp, except we can't include that.
message Timestamp {
  int64 seconds = 1;
  int32 nanos = 2;
}

message Tombstone {
  Architecture arch = 1;
  string build_fingerprint = 2;
  string revision = 3;
  Timestamp timestamp = 4;

  uint32 pid = 5;
  uint32 tid = 6;
  uint32 uid = 7;
  string selinux_context = 8;

  string process_name = 9;

  Signal signal_info = 10;
  string abort_message = 14;
  Cause cause = 15;

  map<uint32, Thread> threads = 16;
  repeated MemoryMapping memory_mappings = 17;
  repeated MemoryDump memory_dumps = 18;

  repeated string logcat = 19;
  map<uint32, FD> open_fds = 20;
}

enum Architecture {
  ARM32 = 0;
  ARM64 = 1;
  X86 = 2;
  X86_64 = 3;
  ARM64_MTE = 4;
}

message Signal {
  int32 number = 1;
  int32 code = 2;
  uint64 fault_address = 3;
}

message Cause {
  string human_readable = 1;

  // Repeated so that multiple potential faults could be displayed. Useful
  // for MTE as sometimes we can have multiple addresses that can describe
  // the bug.
  repeated FaultAddressDetails address_descriptors = 2;
}

message Register {
  string name = 1;
  uint32 u32 = 2;
  uint64 u64 = 3;
}

message Thread {
  repeated Register registers = 1;
  repeated BacktraceFrame current_backtrace = 2;
  repeated BacktraceFrame thread_creation_backtrace = 3;
  uint64 tls_start = 4;
  uint64 tls_end = 5;
  uint64 stack_top = 6;
  uint64 stack_bottom = 7;
  uint64 thread_id = 8;
}

message BacktraceFrame {
  uint64 pc = 1;
  string library = 2;
  string function = 3;
  uint64 offset = 4;
  string build_id = 5;
}

message MemoryDump {
  string register = 1;
  string mapping_name = 2;
  uint64 begin_address = 3;
  bytes memory = 4;
}

message MemoryMapping {
  uint64 begin_address = 1;
  uint64 end_address = 2;
  bool read = 3;
  bool write = 4;
  bool execute = 5;
  bool mte = 6;

  string mapping_name = 7;
  uint64 offset = 8;
}

message FD {
  string path = 1;
  string owner = 2;
  uint64 tag = 3;
}

message Log {
  Timestamp timestamp = 1;
  uint32 pid = 2;
  uint32 tid = 3;
  string tag = 4;
  string message = 5;
}

message HeapAddressDescriptor {
  uint64 allocation_addr = 1;
  repeated BacktraceFrame allocation_backtrace = 2;
  uint64 allocation_tid = 3;
  repeated BacktraceFrame deallocation_backtrace = 4;
  uint64 deallocation_tid = 5;
  // Is this allocation currently alive, or has it been deallocated?
  bool allocation_is_live = 6;
  uint64 allocation_size = 7;
}

message GwpAsanAddressDescriptor {
  HeapAddressDescriptor heap_descriptor = 1;
}

message MTEAddressDescriptor {
  HeapAddressDescriptor heap_descriptor = 1;
  uint32 memory_tag = 2;
}

message FaultAddressDetails {
  GwpAsanAddressDescriptor gwp_asan_descriptor = 1;
  MTEAddressDescriptor mte_descriptor = 2;
}
